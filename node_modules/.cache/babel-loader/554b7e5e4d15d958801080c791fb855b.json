{"ast":null,"code":"var _jsxFileName = \"/Users/donavandaniels/quizzer_start/src/quizzer/QuizQuestion.tsx\";\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"./QuizQuestion.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuizQuestion = _ref => {\n  let {\n    index,\n    question,\n    submitted,\n    handleSubmit,\n    addPoints,\n    editQuestionSub\n  } = _ref;\n\n  const handleClick = e => {\n    if (!submitted) {\n      editQuestionSub(question.id, e.target.value);\n    }\n  };\n\n  const handleSubmitClick = () => {\n    handleSubmit(index);\n\n    if (question.submission === question.expected) {\n      addPoints(5);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          \"data-testid\": \"question_body\",\n          children: [index + 1, \". \", question.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [question.points, \" pt\", question.points !== 1 ? \"s\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \"f\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer_box\",\n        children: [question.type === \"short_answer_question\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formShortAnswerBox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            \"data-testid\": \"select-option\",\n            value: question.submission,\n            onChange: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), question.type === \"multiple_choice_question\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: question.options.map((option, i) => /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"\",\n            name: \"questionChoice\" + index,\n            label: option,\n            value: option,\n            checked: question.submission === option,\n            onChange: handleClick\n          }, option + \" | \" + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub_check\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: submitted ? \"\" : \"hidden\",\n            children: question.submission === question.expected ? \"✔️\" : \"❌\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: submitted,\n            className: \"submit_btn\",\n            onClick: handleSubmitClick,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = QuizQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizQuestion\");","map":{"version":3,"sources":["/Users/donavandaniels/quizzer_start/src/quizzer/QuizQuestion.tsx"],"names":["React","Form","Button","QuizQuestion","index","question","submitted","handleSubmit","addPoints","editQuestionSub","handleClick","e","id","target","value","handleSubmitClick","submission","expected","body","points","type","options","map","option","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Question } from \"../interfaces/question\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport \"./QuizQuestion.css\";\ntype ChangeEvent = React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>;\ninterface quizQuestionProps {\n  index: number;\n  question: Question;\n  submitted: boolean;\n  handleSubmit: (index: number) => void;\n  addPoints: (points: number) => void;\n  editQuestionSub: (questionId: number, submission: string) => void;\n}\nexport const QuizQuestion = ({\n  index,\n  question,\n  submitted,\n  handleSubmit,\n  addPoints,\n  editQuestionSub,\n}: quizQuestionProps) => {\n  const handleClick = (e: ChangeEvent) => {\n    if (!submitted) {\n      editQuestionSub(question.id, e.target.value);\n    }\n  };\n\n  const handleSubmitClick = () => {\n    handleSubmit(index);\n    if (question.submission === question.expected) {\n      addPoints(5);\n    }\n  };\n\n  return (\n    <>\n      <hr />\n      <div className=\"question\">\n        <div className=\"question_header\">\n          <h4 data-testid=\"question_body\">\n            {index + 1}. {question.body}\n          </h4>\n          <h4>\n            {question.points} pt{question.points !== 1 ? \"s\" : \"\"}\n          </h4>\n        </div>\n        f\n        <div className=\"answer_box\">\n          {question.type === \"short_answer_question\" && (\n            <Form.Group controlId=\"formShortAnswerBox\">\n              <Form.Control\n                data-testid=\"select-option\"\n                value={question.submission}\n                onChange={handleClick}\n              ></Form.Control>\n            </Form.Group>\n          )}\n          {question.type === \"multiple_choice_question\" && (\n            <div>\n              {question.options.map((option: string, i: number) => (\n                <Form.Check\n                  type=\"\"\n                  name={\"questionChoice\" + index}\n                  key={option + \" | \" + i}\n                  label={option}\n                  value={option}\n                  checked={question.submission === option}\n                  onChange={handleClick}\n                />\n              ))}\n            </div>\n          )}\n          <div className=\"sub_check\">\n            <h2 className={submitted ? \"\" : \"hidden\"}>\n              {question.submission === question.expected ? \"✔️\" : \"❌\"}\n            </h2>\n            <Button\n              disabled={submitted}\n              className=\"submit_btn\"\n              onClick={handleSubmitClick}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}