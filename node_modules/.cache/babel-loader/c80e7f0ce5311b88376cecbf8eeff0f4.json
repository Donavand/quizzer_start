{"ast":null,"code":"import React from\"react\";import{Form,Button}from\"react-bootstrap\";import\"./QuizQuestion.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var QuizQuestion=function QuizQuestion(_ref){var index=_ref.index,question=_ref.question,submitted=_ref.submitted,handleSubmit=_ref.handleSubmit,addPoints=_ref.addPoints,editQuestionSub=_ref.editQuestionSub;var handleClick=function handleClick(e){if(!submitted){editQuestionSub(question.id,e.target.value);}};var handleSubmitClick=function handleSubmitClick(){handleSubmit(index);if(question.submission===question.expected){addPoints(5);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"question\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question_header\",children:[/*#__PURE__*/_jsxs(\"h4\",{\"data-testid\":\"question_body\",children:[index+1,\". \",question.body]}),/*#__PURE__*/_jsxs(\"h4\",{children:[question.points,\" pt\",question.points!==1?\"s\":\"\"]})]}),\"f\",/*#__PURE__*/_jsxs(\"div\",{className:\"answer_box\",children:[question.type===\"short_answer_question\"&&/*#__PURE__*/_jsx(Form.Group,{controlId:\"formShortAnswerBox\",children:/*#__PURE__*/_jsx(Form.Control,{\"data-testid\":\"select-option\",value:question.submission,onChange:handleClick})}),question.type===\"multiple_choice_question\"&&/*#__PURE__*/_jsx(\"div\",{children:question.options.map(function(option,i){return/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",name:\"questionChoice\"+index,label:option,value:option,checked:question.submission===option,onChange:handleClick},option+\" | \"+i);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sub_check\",children:[/*#__PURE__*/_jsx(\"h2\",{className:submitted?\"\":\"hidden\",children:question.submission===question.expected?\"✔️\":\"❌\"}),/*#__PURE__*/_jsx(Button,{disabled:submitted,className:\"submit_btn\",onClick:handleSubmitClick,children:\"Submit\"})]})]})]})]});};","map":{"version":3,"sources":["/Users/donavandaniels/quizzer_start/src/quizzer/QuizQuestion.tsx"],"names":["React","Form","Button","QuizQuestion","index","question","submitted","handleSubmit","addPoints","editQuestionSub","handleClick","e","id","target","value","handleSubmitClick","submission","expected","body","points","type","options","map","option","i"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,CAAeC,MAAf,KAA6B,iBAA7B,CAEA,MAAO,oBAAP,C,6IAUA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAOH,IANvBC,CAAAA,KAMuB,MANvBA,KAMuB,CALvBC,QAKuB,MALvBA,QAKuB,CAJvBC,SAIuB,MAJvBA,SAIuB,CAHvBC,YAGuB,MAHvBA,YAGuB,CAFvBC,SAEuB,MAFvBA,SAEuB,CADvBC,eACuB,MADvBA,eACuB,CACvB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAoB,CACtC,GAAI,CAACL,SAAL,CAAgB,CACdG,eAAe,CAACJ,QAAQ,CAACO,EAAV,CAAcD,CAAC,CAACE,MAAF,CAASC,KAAvB,CAAf,CACD,CACF,CAJD,CAMA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BR,YAAY,CAACH,KAAD,CAAZ,CACA,GAAIC,QAAQ,CAACW,UAAT,GAAwBX,QAAQ,CAACY,QAArC,CAA+C,CAC7CT,SAAS,CAAC,CAAD,CAAT,CACD,CACF,CALD,CAOA,mBACE,wCACE,aADF,cAEE,aAAK,SAAS,CAAC,UAAf,wBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,YAAI,cAAY,eAAhB,WACGJ,KAAK,CAAG,CADX,MACgBC,QAAQ,CAACa,IADzB,GADF,cAIE,sBACGb,QAAQ,CAACc,MADZ,OACuBd,QAAQ,CAACc,MAAT,GAAoB,CAApB,CAAwB,GAAxB,CAA8B,EADrD,GAJF,GADF,kBAUE,aAAK,SAAS,CAAC,YAAf,WACGd,QAAQ,CAACe,IAAT,GAAkB,uBAAlB,eACC,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,oBAAtB,uBACE,KAAC,IAAD,CAAM,OAAN,EACE,cAAY,eADd,CAEE,KAAK,CAAEf,QAAQ,CAACW,UAFlB,CAGE,QAAQ,CAAEN,WAHZ,EADF,EAFJ,CAUGL,QAAQ,CAACe,IAAT,GAAkB,0BAAlB,eACC,qBACGf,QAAQ,CAACgB,OAAT,CAAiBC,GAAjB,CAAqB,SAACC,MAAD,CAAiBC,CAAjB,qBACpB,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAE,iBAAmBpB,KAF3B,CAIE,KAAK,CAAEmB,MAJT,CAKE,KAAK,CAAEA,MALT,CAME,OAAO,CAAElB,QAAQ,CAACW,UAAT,GAAwBO,MANnC,CAOE,QAAQ,CAAEb,WAPZ,EAGOa,MAAM,CAAG,KAAT,CAAiBC,CAHxB,CADoB,EAArB,CADH,EAXJ,cAyBE,aAAK,SAAS,CAAC,WAAf,wBACE,WAAI,SAAS,CAAElB,SAAS,CAAG,EAAH,CAAQ,QAAhC,UACGD,QAAQ,CAACW,UAAT,GAAwBX,QAAQ,CAACY,QAAjC,CAA4C,IAA5C,CAAmD,GADtD,EADF,cAIE,KAAC,MAAD,EACE,QAAQ,CAAEX,SADZ,CAEE,SAAS,CAAC,YAFZ,CAGE,OAAO,CAAES,iBAHX,oBAJF,GAzBF,GAVF,GAFF,GADF,CAsDD,CA3EM","sourcesContent":["import React from \"react\";\nimport { Question } from \"../interfaces/question\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport \"./QuizQuestion.css\";\ntype ChangeEvent = React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>;\ninterface quizQuestionProps {\n  index: number;\n  question: Question;\n  submitted: boolean;\n  handleSubmit: (index: number) => void;\n  addPoints: (points: number) => void;\n  editQuestionSub: (questionId: number, submission: string) => void;\n}\nexport const QuizQuestion = ({\n  index,\n  question,\n  submitted,\n  handleSubmit,\n  addPoints,\n  editQuestionSub,\n}: quizQuestionProps) => {\n  const handleClick = (e: ChangeEvent) => {\n    if (!submitted) {\n      editQuestionSub(question.id, e.target.value);\n    }\n  };\n\n  const handleSubmitClick = () => {\n    handleSubmit(index);\n    if (question.submission === question.expected) {\n      addPoints(5);\n    }\n  };\n\n  return (\n    <>\n      <hr />\n      <div className=\"question\">\n        <div className=\"question_header\">\n          <h4 data-testid=\"question_body\">\n            {index + 1}. {question.body}\n          </h4>\n          <h4>\n            {question.points} pt{question.points !== 1 ? \"s\" : \"\"}\n          </h4>\n        </div>\n        f\n        <div className=\"answer_box\">\n          {question.type === \"short_answer_question\" && (\n            <Form.Group controlId=\"formShortAnswerBox\">\n              <Form.Control\n                data-testid=\"select-option\"\n                value={question.submission}\n                onChange={handleClick}\n              ></Form.Control>\n            </Form.Group>\n          )}\n          {question.type === \"multiple_choice_question\" && (\n            <div>\n              {question.options.map((option: string, i: number) => (\n                <Form.Check\n                  type=\"radio\"\n                  name={\"questionChoice\" + index}\n                  key={option + \" | \" + i}\n                  label={option}\n                  value={option}\n                  checked={question.submission === option}\n                  onChange={handleClick}\n                />\n              ))}\n            </div>\n          )}\n          <div className=\"sub_check\">\n            <h2 className={submitted ? \"\" : \"hidden\"}>\n              {question.submission === question.expected ? \"✔️\" : \"❌\"}\n            </h2>\n            <Button\n              disabled={submitted}\n              className=\"submit_btn\"\n              onClick={handleSubmitClick}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}